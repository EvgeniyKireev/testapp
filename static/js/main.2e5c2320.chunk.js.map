{"version":3,"sources":["components/Publications/Publications.module.css","components/Publications/Publication.jsx","api/api.js","components/Publications/PublicationContainer.jsx","components/Publications/Publications.jsx","redux/publication-reducer.js","components/Publications/PublicationsContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Publications/Publication.module.css"],"names":["module","exports","Publication","props","className","s","pub","photo","src","link","info","likes","onClick","alert","id","like","data","Date","getDay","date","getMonth","getFullYear","desc","api","getListPhoto","$","ajax","url","type","dataType","crossDomain","success","PublicationContainer","this","React","Component","connect","getInfoPhoto","Publications","photos","map","k","sizes","text","count","wrapper","initialState","PublicationsContainer","state","getPhotos","publication","dispatch","then","response","items","setUrls","urls","Boolean","window","location","hostname","match","reducers","combineReducers","action","urlsPhotos","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e5c2320.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Publications_wrapper__1rXXN\"};","import React from \"react\";\r\nimport s from './Publication.module.css';\r\n\r\nlet Publication = (props) => {\r\n    debugger\r\n    return (<div className={s.pub}>\r\n        <div className={s.photo}><img src={props.link}/>\r\n            <div className={s.info}>\r\n                    <div>{props.likes} likes\r\n                </div><div onClick={()=> {alert(props.id)}}><img className={s.like} src={'https://img.icons8.com/pastel-glyph/2x/facebook-like.png'}/></div>\r\n                <div className={s.data}>{['Дата: ',new Date().getDay(),'.', new Date((props.date) * 1000).getMonth(),'.', new Date((props.date) * 1000).getFullYear()]}</div>\r\n            </div>\r\n        </div>\r\n        <span>{props.desc ? props.desc : <div>----------------there could be a description----------------</div>}</span>\r\n\r\n    </div>);\r\n}\r\nexport default Publication;","\r\nimport $ from \"jquery\";\r\n\r\nexport const api = {\r\n    getListPhoto() {\r\n        // return axios.get('https://api.vk.com/method/photos.getAll?PARAMETERS&access_token=7d4cd8e66653d88fa2bd0284cc98028d1d060b5387a8dc57e1226f32eec5b24d11582503fbadf4d3cfd9d&owner_id=1&extended=1&v=5.124',)\r\n        return $.ajax({\r\n            url: 'https://api.vk.com/method/photos.getAll?PARAMETERS&access_token=7d4cd8e66653d88fa2bd0284cc98028d1d060b5387a8dc57e1226f32eec5b24d11582503fbadf4d3cfd9d&owner_id=1&extended=1&v=5.124&count=20',\r\n            type: 'GET',\r\n            dataType: 'jsonp',\r\n            crossDomain: true,\r\n            success: function(data){\r\n                return data\r\n            }\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport s from './Publication.module.css';\r\nimport Publication from \"./Publication\";\r\nimport {connect} from \"react-redux\";\r\nimport {api} from \"../../api/api\";\r\n\r\nclass PublicationContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Publication {...this.props}/>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default connect(null,{getInfoPhoto :api.getInfoPhoto})(PublicationContainer);","import React from \"react\";\r\nimport PublicationContainer from \"./PublicationContainer\";\r\nimport s from \"./Publications.module.css\";\r\n\r\nlet Publications = (props) => {\r\n    let data = []\r\n    if (props.photos != '') {\r\n        data = props.photos.map((k) => <PublicationContainer link={k.sizes[6].url} desc={k.text} likes={k.likes.count} date={k.date} id={k.id}/>)\r\n\r\n    }\r\n\r\n\r\n    return (<div className={s.wrapper}>\r\n        {data}\r\n    </div>);\r\n}\r\nexport default Publications;","import {api} from \"../api/api\";\r\n\r\nconst SET_PHOTOS = \"SET_PHOTOS\";\r\nconst SET_URLS = 'SET_URLS';\r\nconst SET_INFO = 'SET_INFO';\r\nlet initialState = {\r\n    photos: '',\r\n};\r\n\r\nexport const setUrls = (urls) => ({type: SET_URLS, urls});\r\nconst setPhotos = (photos) => ({type: SET_PHOTOS, photos});\r\n\r\nexport const getPhotos = () => (dispatch) => {\r\n    return api.getListPhoto().then((response) => {\r\n            dispatch(setPhotos(response.response.items));\r\n\r\n    });\r\n}\r\n\r\n\r\n\r\nexport let pubReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PHOTOS:\r\n            return {...state, photos: action.photos}\r\n        case SET_URLS:\r\n            return {...state, urlsPhotos: action.urls}\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\nimport Publications from \"./Publications\";\r\nimport {getPhotos, setUrls} from \"../../redux/publication-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass PublicationsContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {}\r\n    componentDidMount() {\r\n        this.props.getPhotos()\r\n    }\r\n\r\n    render() {\r\n        return (<Publications photos={this.props.photos}/>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    photos: state.publication.photos\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getPhotos, setUrls})(PublicationsContainer);","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport PublicationsContainer from \"./components/Publications/PublicationsContainer\";\n\nfunction App(props) {\n  return (\n          <PublicationsContainer />\n  );\n}\n\nlet mapStateToProps = (state) => ({\n});\n\nexport default connect(mapStateToProps, {})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport {pubReducer} from \"./publication-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nlet reducers = combineReducers({\r\n    publication: pubReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/redux-store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pub\":\"Publication_pub__2C600\",\"info\":\"Publication_info__D38GW\",\"photo\":\"Publication_photo__3NkR8\",\"like\":\"Publication_like__cqfwy\",\"data\":\"Publication_data__3we3U\"};"],"sourceRoot":""}